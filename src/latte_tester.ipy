DEBUG = False

def run_test(dir: str, file: str) -> bool:
    assert file.endswith(".lat")
    filebase = file[:-4]
    o = !bash latc {filebase}.lat
    if "ERROR" in o:
        return "COMPILE ERROR"

    files = !ls {dir}
    if (filebase + ".input").split('/')[-1] in files:
        o = !{filebase}.o < {filebase}.input > {filebase}.actout
    else:
        o = !{filebase}.o > {filebase}.actout
    if (o):
        raise ValueError(str(o))
    if (filebase + ".output").split('/')[-1] in files:
        diff = !diff {filebase}.output {filebase}.actout
        if diff:
            return "OUTPUT DIFF ERROR"
    return "OK"


def main(dir="lattests/bad/", expected_good=True):
    files = !ls {dir}
    tests = [file for file in files if file.endswith(".lat")]
    ok = 0
    err = 0
    for test in tests:
        print(dir + test, end="")
        res = run_test(dir, dir + test)
        if res == "OK":
            ok += 1
            print(" OK")
            if not expected_good and DEBUG:
                !cat {dir + test}
                print()
        else:
            err += 1
            print(" " + res)
            if expected_good and DEBUG:
                !cat {dir + test}
                print()
    print()
    all = ok + err
    expected = ok if expected_good else err
    print("NOT expected: {}/{}".format(all - expected, all))
    print()
    print()
    return all - expected

if __name__ == "__main__":
    not_expected = 0
    for good_dir in ["lattests/good/",
                     "lattests/extensions/arrays1/",
                     "lattests/extensions/objects1/",
                     "lattests/extensions/objects2/",
                     "lattests/extensions/struct/",
                     "studentstests/good/basic/",
                     "studentstests/good/arrays/",
                     "studentstests/good/virtual/",
                     ]:
        not_expected += main(good_dir, True)

    print()
    print()
    print()


    for bad_dir in ["lattests/bad/", "studentstests/bad/semantic/"]:
        not_expected += main(bad_dir, False)

    print()
    print("all not expected:", not_expected)